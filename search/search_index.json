{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome to SaaSOps Documentation","text":"<p>Repo located here</p>"},{"location":"#main-page-topics","title":"Main Page Topics","text":"<ul> <li>Installation</li> <li>Data structure description</li> <li>Setting up the Database and environment</li> <li>Adding Customers, Contracts, Segments and Invoices</li> <li>Running CLI analyses</li> <li>Exporting to images and PPTX</li> </ul>"},{"location":"data_structure/","title":"Data Structure &amp; Definitions","text":""},{"location":"data_structure/#database-structure","title":"Database Structure","text":"<p>The application uses a PostgreSQL database to store information on contracts, customers, segments and invoices:</p> Object Description Customer Customer name, city and state Contract Contract details, referencing customer ID and including information on reference, booked contract date, overall term start and end dates and total value. If the contract is a renewal of prior contract an optional field links to ID of prior contract. Segment Represents a single revenue component of the parent contract. May be a Subscription or Service component. Has a total value and a segment start and end date. Invoice Linked to one or more segments, and segments may have one or more invoices. Invoices also have typical data such as issue date, amount and days payable. <p>This structure is described in greater detail below.</p>"},{"location":"data_structure/#understanding-segments","title":"Understanding Segments","text":"<p>A basic Contract often has two main components:</p> <ol> <li>Platform license subscription fee</li> <li>Installation and onboarding</li> </ol> <p>The Segment enables both of these components to be included in the database and helps ensure metrics and analysis output is based correctly on recurring and non-recurring revenue as appropriate.</p> <p>For each of the above, an individual Segment will be defined:</p> <ol> <li>Platform Subscription, of type Subscription with start date, end date and total segment value</li> <li>Installation Services, of type Services and perhaps just total segment value, depending on whether or not any date information is available.</li> </ol> <p>More complex Contracts may have multiple subscription components, each with different term dates and values. The Segment structure allows this detail to be captured.</p>"},{"location":"data_structure/#database-diagram","title":"Database Diagram","text":"<pre><code>classDiagram\n    Customer &lt;|-- Contract\n    Contract &lt;|-- Segment\n    Segment &lt;|-- Invoice\nclass Customer{\n    +int id\n    +String name\n    +String state\n    +String city\n}\nclass Contract{\n    +int id\n    +String reference\n}</code></pre>"},{"location":"installation/","title":"Installing SaaSOps","text":""},{"location":"installation/#cloning-repo","title":"Cloning repo","text":"<p>The best approach currently to installing SaaSOps is to clone the repo located here.</p> <p>Once cloned, run the following in the root folder of the repo:</p> <pre><code>$ pipenv shell\n$ pipenv install\n</code></pre>"},{"location":"installation/#installing-and-setting-up-postgresql","title":"Installing and setting up PostgreSQL","text":"<pre><code>$ sudo apt install postgresql\n</code></pre> <p>using psql with sudo setting up template db for testing copy</p>"},{"location":"installation/#checking-using-pytest","title":"Checking using pytest","text":"<p>Best next step to check everything is working is to run:</p> <pre><code>$ pytest\n</code></pre> <p>and check that everything tested out correctly.</p>"}]}